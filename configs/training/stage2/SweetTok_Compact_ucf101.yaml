experiment:
    project: "SweetTok_Compact_stage2"
    name: "SweetTok_Compact_stage2_run1"
    output_dir: "SweetTok_Compact_stage2_run1"
    train_stage: 2
    # max_train_examples: 1_281_167
    max_train_examples: 9537
    save_every: 10_000
    eval_every: 5_000
    generate_every: 1_000
    log_every: 50
    log_grad_norm_every: 1_000
    resume: True
    init_weight: './checkpoints/ucf_stage1.bin'

model:
    vq_model:
        # vit arch
        vit_enc_model_size: "small"
        vit_dec_model_size: "small"
        vit_enc_patch_size: 16
        vit_dec_patch_size: 8
        # For SweetTok Base model
        codebook_size: 8192
        token_size: 8
        use_l2_norm: True
        commitment_cost: 0.25
        # For SweetTok Compact model
        num_spatial_latent_tokens: 256
        num_intermediate_temporal_tokens : 2
        num_temporal_latent_tokens: 1024
        temporal_latent_depth: 4
        enc_tube_size: 17
        dec_tube_size: 5
        dec_output_size: 8192
        finetune_decoder: True
        pretrained_tokenizer_weight: "./checkpoints/imagenet_ucf.ckpt"
        image_stage1_weight: "./checkpoints/ucf_imagenet_spatial_pretrain.bin"
        model_type: "SweetTok_Compact" 
    
losses:
    discriminator_start: 20000
    quantizer_weight: 0.0
    discriminator_factor: 1.0
    discriminator_weight: 0.01
    perceptual_loss: "convnext_s"
    perceptual_weight: 0.1 #4
    reconstruction_loss: "l2"
    reconstruction_weight: 1.0
    lecam_regularization_weight: 0.001

dataset:
    params:
        train_shards_path_or_url: ["./SweetTok", "./SweetTok/data_files/ucf_train.txt"] 
        eval_shards_path_or_url: ["./SweetTok", "./SweetTok/data_files/ucf_val.txt"]
        num_workers_per_gpu: 12
    preprocessing:
        resize_shorter_edge: 256
        crop_size: 256
        random_crop: True
        random_flip: True
        normalize_mean: [0.5, 0.5, 0.5]
        normalize_std: [1.0, 1.0, 1.0]

optimizer:
    name: adamw 
    params:
        learning_rate: 1e-4
        discriminator_learning_rate: 1e-4
        beta1: 0.9 #0.9 
        beta2: 0.999 #0.999
        weight_decay: 1e-4

lr_scheduler:
    scheduler: "cosine"
    params:
        learning_rate: ${optimizer.params.learning_rate}
        discriminator_learning_rate: ${optimizer.params.discriminator_learning_rate}
        warmup_steps: 10000
        discriminator_warmup_steps: 10000
        end_lr: 1e-5
        discriminator_end_lr: 1e-5

training:
    gradient_accumulation_steps: 1
    per_gpu_batch_size: 8
    mixed_precision: "bf16"
    enable_tf32: True
    enable_wandb: True
    use_ema: True
    seed: 42
    max_train_steps: 50000
    num_generated_images: 2
    max_grad_norm: 1.0

eval:
    accelerate_load: True
